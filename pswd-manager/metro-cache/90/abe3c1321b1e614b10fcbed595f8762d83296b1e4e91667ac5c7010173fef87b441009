{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  (function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.deepmerge = factory());\n  })(this, function () {\n    'use strict';\n\n    var isMergeableObject = function isMergeableObject(value) {\n      return isNonNullObject(value) && !isSpecial(value);\n    };\n\n    function isNonNullObject(value) {\n      return !!value && typeof value === 'object';\n    }\n\n    function isSpecial(value) {\n      var stringValue = Object.prototype.toString.call(value);\n      return stringValue === '[object RegExp]' || stringValue === '[object Date]' || isReactElement(value);\n    }\n\n    var canUseSymbol = typeof Symbol === 'function' && (typeof Symbol === \"function\" ? Symbol.for : \"@@for\");\n    var REACT_ELEMENT_TYPE = canUseSymbol ? (typeof Symbol === \"function\" ? Symbol.for : \"@@for\")('react.element') : 0xeac7;\n\n    function isReactElement(value) {\n      return value.$$typeof === REACT_ELEMENT_TYPE;\n    }\n\n    function emptyTarget(val) {\n      return Array.isArray(val) ? [] : {};\n    }\n\n    function cloneUnlessOtherwiseSpecified(value, options) {\n      return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;\n    }\n\n    function defaultArrayMerge(target, source, options) {\n      return target.concat(source).map(function (element) {\n        return cloneUnlessOtherwiseSpecified(element, options);\n      });\n    }\n\n    function getMergeFunction(key, options) {\n      if (!options.customMerge) {\n        return deepmerge;\n      }\n\n      var customMerge = options.customMerge(key);\n      return typeof customMerge === 'function' ? customMerge : deepmerge;\n    }\n\n    function mergeObject(target, source, options) {\n      var destination = {};\n\n      if (options.isMergeableObject(target)) {\n        Object.keys(target).forEach(function (key) {\n          destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n        });\n      }\n\n      Object.keys(source).forEach(function (key) {\n        if (!options.isMergeableObject(source[key]) || !target[key]) {\n          destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n        } else {\n          destination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n        }\n      });\n      return destination;\n    }\n\n    function deepmerge(target, source, options) {\n      options = options || {};\n      options.arrayMerge = options.arrayMerge || defaultArrayMerge;\n      options.isMergeableObject = options.isMergeableObject || isMergeableObject;\n      var sourceIsArray = Array.isArray(source);\n      var targetIsArray = Array.isArray(target);\n      var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n      if (!sourceAndTargetTypesMatch) {\n        return cloneUnlessOtherwiseSpecified(source, options);\n      } else if (sourceIsArray) {\n        return options.arrayMerge(target, source, options);\n      } else {\n        return mergeObject(target, source, options);\n      }\n    }\n\n    deepmerge.all = function deepmergeAll(array, options) {\n      if (!Array.isArray(array)) {\n        throw new Error('first argument should be an array');\n      }\n\n      return array.reduce(function (prev, next) {\n        return deepmerge(prev, next, options);\n      }, {});\n    };\n\n    var deepmerge_1 = deepmerge;\n    return deepmerge_1;\n  });\n});","map":[[2,0,1,1],[2,13,1,11,"global"],[2,19,1,1],[2,21,1,19,"factory"],[2,28,1,1],[2,30,1,28],[3,0,2,1],[3,11,2,8,"exports"],[3,18,2,1],[3,23,2,20],[3,31,2,1],[3,35,2,32],[3,42,2,39,"module"],[3,48,2,32],[3,53,2,50],[3,64,2,1],[3,67,2,64,"module"],[3,73,2,70],[3,74,2,71,"exports"],[3,81,2,64],[3,84,2,81,"factory"],[3,91,2,88],[3,93,2,1],[3,96,3,1],[3,103,3,8,"define"],[3,109,3,1],[3,114,3,19],[3,124,3,1],[3,128,3,33,"define"],[3,134,3,39],[3,135,3,40,"amd"],[3,138,3,1],[3,141,3,46,"define"],[3,147,3,52],[3,148,3,53,"factory"],[3,155,3,52],[3,156,3,1],[3,160,4,2,"global"],[3,166,4,8],[3,169,4,11,"global"],[3,175,4,17],[3,179,4,21,"self"],[3,183,4,2],[3,185,4,27,"global"],[3,191,4,33],[3,192,4,34,"deepmerge"],[3,201,4,27],[3,204,4,46,"factory"],[3,211,4,53],[3,213,3,1],[3,214,2,1],[4,0,5,1],[4,3,1,1],[4,5,5,2],[4,9,1,1],[4,11,5,8],[4,23,5,20],[5,0,5,22],[7,0,7,1],[7,8,7,5,"isMergeableObject"],[7,25,7,22],[7,28,7,25],[7,37,7,34,"isMergeableObject"],[7,54,7,25],[7,55,7,52,"value"],[7,60,7,25],[7,62,7,59],[8,0,8,2],[8,13,8,9,"isNonNullObject"],[8,28,8,24],[8,29,8,25,"value"],[8,34,8,24],[8,35,8,9],[8,39,9,6],[8,40,9,7,"isSpecial"],[8,49,9,16],[8,50,9,17,"value"],[8,55,9,16],[8,56,8,2],[9,0,10,2],[9,5,7,1],[11,0,12,1],[11,13,12,10,"isNonNullObject"],[11,28,12,1],[11,29,12,26,"value"],[11,34,12,1],[11,36,12,33],[12,0,13,2],[12,13,13,9],[12,14,13,10],[12,15,13,11,"value"],[12,20,13,9],[12,24,13,20],[12,31,13,27,"value"],[12,36,13,20],[12,41,13,37],[12,49,13,2],[13,0,14,2],[15,0,16,1],[15,13,16,10,"isSpecial"],[15,22,16,1],[15,23,16,20,"value"],[15,28,16,1],[15,30,16,27],[16,0,17,2],[16,10,17,6,"stringValue"],[16,21,17,17],[16,24,17,20,"Object"],[16,30,17,26],[16,31,17,27,"prototype"],[16,40,17,20],[16,41,17,37,"toString"],[16,49,17,20],[16,50,17,46,"call"],[16,54,17,20],[16,55,17,51,"value"],[16,60,17,20],[16,61,17,2],[17,0,19,2],[17,13,19,9,"stringValue"],[17,24,19,20],[17,29,19,25],[17,46,19,9],[17,50,20,6,"stringValue"],[17,61,20,17],[17,66,20,22],[17,81,19,9],[17,85,21,6,"isReactElement"],[17,99,21,20],[17,100,21,21,"value"],[17,105,21,20],[17,106,19,2],[18,0,22,2],[20,0,25,1],[20,8,25,5,"canUseSymbol"],[20,20,25,17],[20,23,25,20],[20,30,25,27,"Symbol"],[20,36,25,20],[20,41,25,38],[20,51,25,20],[20,87,25,52,"Symbol"],[20,93,25,58],[20,94,25,59,"for"],[20,97,25,20],[20,108,25,1],[21,0,26,1],[21,8,26,5,"REACT_ELEMENT_TYPE"],[21,26,26,23],[21,29,26,26,"canUseSymbol"],[21,41,26,38],[21,44,26,41],[21,76,26,41,"Symbol"],[21,82,26,47],[21,83,26,48,"for"],[21,86,26,41],[21,98,26,52],[21,113,26,41],[21,114,26,38],[21,117,26,71],[21,123,26,1],[23,0,28,1],[23,13,28,10,"isReactElement"],[23,27,28,1],[23,28,28,25,"value"],[23,33,28,1],[23,35,28,32],[24,0,29,2],[24,13,29,9,"value"],[24,18,29,14],[24,19,29,15,"$$typeof"],[24,27,29,9],[24,32,29,28,"REACT_ELEMENT_TYPE"],[24,50,29,2],[25,0,30,2],[27,0,32,1],[27,13,32,10,"emptyTarget"],[27,24,32,1],[27,25,32,22,"val"],[27,28,32,1],[27,30,32,27],[28,0,33,2],[28,13,33,9,"Array"],[28,18,33,14],[28,19,33,15,"isArray"],[28,26,33,9],[28,27,33,23,"val"],[28,30,33,9],[28,34,33,30],[28,36,33,9],[28,39,33,35],[28,41,33,2],[29,0,34,2],[31,0,36,1],[31,13,36,10,"cloneUnlessOtherwiseSpecified"],[31,42,36,1],[31,43,36,40,"value"],[31,48,36,1],[31,50,36,47,"options"],[31,57,36,1],[31,59,36,56],[32,0,37,2],[32,13,37,10,"options"],[32,20,37,17],[32,21,37,18,"clone"],[32,26,37,10],[32,31,37,28],[32,36,37,10],[32,40,37,37,"options"],[32,47,37,44],[32,48,37,45,"isMergeableObject"],[32,65,37,37],[32,66,37,63,"value"],[32,71,37,37],[32,72,37,9],[32,75,38,5,"deepmerge"],[32,84,38,14],[32,85,38,15,"emptyTarget"],[32,96,38,26],[32,97,38,27,"value"],[32,102,38,26],[32,103,38,14],[32,105,38,35,"value"],[32,110,38,14],[32,112,38,42,"options"],[32,119,38,14],[32,120,37,9],[32,123,39,5,"value"],[32,128,37,2],[33,0,40,2],[35,0,42,1],[35,13,42,10,"defaultArrayMerge"],[35,30,42,1],[35,31,42,28,"target"],[35,37,42,1],[35,39,42,36,"source"],[35,45,42,1],[35,47,42,44,"options"],[35,54,42,1],[35,56,42,53],[36,0,43,2],[36,13,43,9,"target"],[36,19,43,15],[36,20,43,16,"concat"],[36,26,43,9],[36,27,43,23,"source"],[36,33,43,9],[36,35,43,31,"map"],[36,38,43,9],[36,39,43,35],[36,49,43,44,"element"],[36,56,43,35],[36,58,43,53],[37,0,44,3],[37,15,44,10,"cloneUnlessOtherwiseSpecified"],[37,44,44,39],[37,45,44,40,"element"],[37,52,44,39],[37,54,44,49,"options"],[37,61,44,39],[37,62,44,3],[38,0,45,3],[38,7,43,9],[38,8,43,2],[39,0,46,2],[41,0,48,1],[41,13,48,10,"getMergeFunction"],[41,29,48,1],[41,30,48,27,"key"],[41,33,48,1],[41,35,48,32,"options"],[41,42,48,1],[41,44,48,41],[42,0,49,2],[42,10,49,6],[42,11,49,7,"options"],[42,18,49,14],[42,19,49,15,"customMerge"],[42,30,49,2],[42,32,49,28],[43,0,50,3],[43,15,50,10,"deepmerge"],[43,24,50,3],[44,0,51,3],[46,0,52,2],[46,10,52,6,"customMerge"],[46,21,52,17],[46,24,52,20,"options"],[46,31,52,27],[46,32,52,28,"customMerge"],[46,43,52,20],[46,44,52,40,"key"],[46,47,52,20],[46,48,52,2],[47,0,53,2],[47,13,53,9],[47,20,53,16,"customMerge"],[47,31,53,9],[47,36,53,32],[47,46,53,9],[47,49,53,45,"customMerge"],[47,60,53,9],[47,63,53,59,"deepmerge"],[47,72,53,2],[48,0,54,2],[50,0,56,1],[50,13,56,10,"mergeObject"],[50,24,56,1],[50,25,56,22,"target"],[50,31,56,1],[50,33,56,30,"source"],[50,39,56,1],[50,41,56,38,"options"],[50,48,56,1],[50,50,56,47],[51,0,57,2],[51,10,57,6,"destination"],[51,21,57,17],[51,24,57,20],[51,26,57,2],[53,0,58,2],[53,10,58,6,"options"],[53,17,58,13],[53,18,58,14,"isMergeableObject"],[53,35,58,6],[53,36,58,32,"target"],[53,42,58,6],[53,43,58,2],[53,45,58,41],[54,0,59,3,"Object"],[54,8,59,3,"Object"],[54,14,59,9],[54,15,59,10,"keys"],[54,19,59,3],[54,20,59,15,"target"],[54,26,59,3],[54,28,59,23,"forEach"],[54,35,59,3],[54,36,59,31],[54,46,59,40,"key"],[54,49,59,31],[54,51,59,45],[55,0,60,4,"destination"],[55,10,60,4,"destination"],[55,21,60,15],[55,22,60,16,"key"],[55,25,60,15],[55,26,60,4],[55,29,60,23,"cloneUnlessOtherwiseSpecified"],[55,58,60,52],[55,59,60,53,"target"],[55,65,60,59],[55,66,60,60,"key"],[55,69,60,59],[55,70,60,52],[55,72,60,66,"options"],[55,79,60,52],[55,80,60,4],[56,0,61,4],[56,9,59,3],[57,0,62,3],[59,0,63,2,"Object"],[59,6,63,2,"Object"],[59,12,63,8],[59,13,63,9,"keys"],[59,17,63,2],[59,18,63,14,"source"],[59,24,63,2],[59,26,63,22,"forEach"],[59,33,63,2],[59,34,63,30],[59,44,63,39,"key"],[59,47,63,30],[59,49,63,44],[60,0,64,3],[60,12,64,7],[60,13,64,8,"options"],[60,20,64,15],[60,21,64,16,"isMergeableObject"],[60,38,64,8],[60,39,64,34,"source"],[60,45,64,40],[60,46,64,41,"key"],[60,49,64,40],[60,50,64,8],[60,51,64,7],[60,55,64,50],[60,56,64,51,"target"],[60,62,64,57],[60,63,64,58,"key"],[60,66,64,57],[60,67,64,3],[60,69,64,64],[61,0,65,4,"destination"],[61,10,65,4,"destination"],[61,21,65,15],[61,22,65,16,"key"],[61,25,65,15],[61,26,65,4],[61,29,65,23,"cloneUnlessOtherwiseSpecified"],[61,58,65,52],[61,59,65,53,"source"],[61,65,65,59],[61,66,65,60,"key"],[61,69,65,59],[61,70,65,52],[61,72,65,66,"options"],[61,79,65,52],[61,80,65,4],[62,0,66,4],[62,9,64,3],[62,15,66,10],[63,0,67,4,"destination"],[63,10,67,4,"destination"],[63,21,67,15],[63,22,67,16,"key"],[63,25,67,15],[63,26,67,4],[63,29,67,23,"getMergeFunction"],[63,45,67,39],[63,46,67,40,"key"],[63,49,67,39],[63,51,67,45,"options"],[63,58,67,39],[63,59,67,23],[63,60,67,54,"target"],[63,66,67,60],[63,67,67,61,"key"],[63,70,67,60],[63,71,67,23],[63,73,67,67,"source"],[63,79,67,73],[63,80,67,74,"key"],[63,83,67,73],[63,84,67,23],[63,86,67,80,"options"],[63,93,67,23],[63,94,67,4],[64,0,68,4],[65,0,69,3],[65,7,63,2],[66,0,70,2],[66,13,70,9,"destination"],[66,24,70,2],[67,0,71,2],[69,0,73,1],[69,13,73,10,"deepmerge"],[69,22,73,1],[69,23,73,20,"target"],[69,29,73,1],[69,31,73,28,"source"],[69,37,73,1],[69,39,73,36,"options"],[69,46,73,1],[69,48,73,45],[70,0,74,2,"options"],[70,6,74,2,"options"],[70,13,74,9],[70,16,74,12,"options"],[70,23,74,19],[70,27,74,23],[70,29,74,2],[71,0,75,2,"options"],[71,6,75,2,"options"],[71,13,75,9],[71,14,75,10,"arrayMerge"],[71,24,75,2],[71,27,75,23,"options"],[71,34,75,30],[71,35,75,31,"arrayMerge"],[71,45,75,23],[71,49,75,45,"defaultArrayMerge"],[71,66,75,2],[72,0,76,2,"options"],[72,6,76,2,"options"],[72,13,76,9],[72,14,76,10,"isMergeableObject"],[72,31,76,2],[72,34,76,30,"options"],[72,41,76,37],[72,42,76,38,"isMergeableObject"],[72,59,76,30],[72,63,76,59,"isMergeableObject"],[72,80,76,2],[73,0,78,2],[73,10,78,6,"sourceIsArray"],[73,23,78,19],[73,26,78,22,"Array"],[73,31,78,27],[73,32,78,28,"isArray"],[73,39,78,22],[73,40,78,36,"source"],[73,46,78,22],[73,47,78,2],[74,0,79,2],[74,10,79,6,"targetIsArray"],[74,23,79,19],[74,26,79,22,"Array"],[74,31,79,27],[74,32,79,28,"isArray"],[74,39,79,22],[74,40,79,36,"target"],[74,46,79,22],[74,47,79,2],[75,0,80,2],[75,10,80,6,"sourceAndTargetTypesMatch"],[75,35,80,31],[75,38,80,34,"sourceIsArray"],[75,51,80,47],[75,56,80,52,"targetIsArray"],[75,69,80,2],[77,0,82,2],[77,10,82,6],[77,11,82,7,"sourceAndTargetTypesMatch"],[77,36,82,2],[77,38,82,34],[78,0,83,3],[78,15,83,10,"cloneUnlessOtherwiseSpecified"],[78,44,83,39],[78,45,83,40,"source"],[78,51,83,39],[78,53,83,48,"options"],[78,60,83,39],[78,61,83,3],[79,0,84,3],[79,7,82,2],[79,13,84,9],[79,17,84,13,"sourceIsArray"],[79,30,84,9],[79,32,84,28],[80,0,85,3],[80,15,85,10,"options"],[80,22,85,17],[80,23,85,18,"arrayMerge"],[80,33,85,10],[80,34,85,29,"target"],[80,40,85,10],[80,42,85,37,"source"],[80,48,85,10],[80,50,85,45,"options"],[80,57,85,10],[80,58,85,3],[81,0,86,3],[81,7,84,9],[81,13,86,9],[82,0,87,3],[82,15,87,10,"mergeObject"],[82,26,87,21],[82,27,87,22,"target"],[82,33,87,21],[82,35,87,30,"source"],[82,41,87,21],[82,43,87,38,"options"],[82,50,87,21],[82,51,87,3],[83,0,88,3],[84,0,89,2],[86,0,91,1,"deepmerge"],[86,4,91,1,"deepmerge"],[86,13,91,10],[86,14,91,11,"all"],[86,17,91,1],[86,20,91,17],[86,29,91,26,"deepmergeAll"],[86,41,91,17],[86,42,91,39,"array"],[86,47,91,17],[86,49,91,46,"options"],[86,56,91,17],[86,58,91,55],[87,0,92,2],[87,10,92,6],[87,11,92,7,"Array"],[87,16,92,12],[87,17,92,13,"isArray"],[87,24,92,7],[87,25,92,21,"array"],[87,30,92,7],[87,31,92,2],[87,33,92,29],[88,0,93,3],[88,14,93,9],[88,18,93,13,"Error"],[88,23,93,9],[88,24,93,19],[88,59,93,9],[88,60,93,3],[89,0,94,3],[91,0,96,2],[91,13,96,9,"array"],[91,18,96,14],[91,19,96,15,"reduce"],[91,25,96,9],[91,26,96,22],[91,36,96,31,"prev"],[91,40,96,22],[91,42,96,37,"next"],[91,46,96,22],[91,48,96,43],[92,0,97,3],[92,15,97,10,"deepmerge"],[92,24,97,19],[92,25,97,20,"prev"],[92,29,97,19],[92,31,97,26,"next"],[92,35,97,19],[92,37,97,32,"options"],[92,44,97,19],[92,45,97,3],[93,0,98,3],[93,7,96,9],[93,9,98,5],[93,11,96,9],[93,12,96,2],[94,0,99,2],[94,5,91,1],[96,0,101,1],[96,8,101,5,"deepmerge_1"],[96,19,101,16],[96,22,101,19,"deepmerge"],[96,31,101,1],[97,0,103,1],[97,11,103,8,"deepmerge_1"],[97,22,103,1],[98,0,105,1],[98,3,1,1],[98,4,1,0]]},"type":"js/module"}]}